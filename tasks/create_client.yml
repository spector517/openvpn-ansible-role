- block:
  - name: Ensure clients directory is present
    file:
      path: '{{ openvpn_clients_path }}'
      state: directory
    delegate_to: localhost
    run_once: true

  - name: '{{ client_name }} >> Check if already exists'
    stat:
      path: '{{ openvpn_clients_path }}/{{ client_name }}.ovpn'
    register: client_stat_info
    delegate_to: localhost

  - name: '{{ client_name }} >> Generate client key/cert pair'
    shell:
      chdir: '{{ openvpn_easy_rsa_path }}'
      cmd: './easyrsa build-client-full {{ client_name }} nopass'
    when: 
    - not client_stat_info.stat.exists
    - not ansible_check_mode
    delegate_to: '{{ openvpn_ca_host }}'
  
  - name: '{{ client_name }} >> Read CA cert, client cert, client key and TA key'
    shell:
      chdir: '{{ openvpn_easy_rsa_path }}'
      cmd: 'cat {{ item }}'
    loop:
    - 'pki/issued/{{ client_name }}.crt'
    - 'pki/private/{{ client_name }}.key'
    loop_control:
      label: '{{ item }}'
    register: ovpn_clients_files_values
    delegate_to: '{{ openvpn_ca_host }}'

  - name: '{{ client_name }} >> Write CA cert, client cert, client key and TA key to variables'
    set_fact:
      client_cert_value: '{{ ovpn_clients_files_values.results[0].stdout | trim }}'
      client_key_value: '{{ ovpn_clients_files_values.results[1].stdout | trim }}'
    when: 
    - not client_stat_info.stat.exists
    - not ansible_check_mode
    delegate_to: '{{ openvpn_ca_host }}'

  - name: '{{ client_name }} >> Create OpenVPN client config file'
    template:
      src: client_conf.j2
      dest: '{{ openvpn_clients_path }}/{{ client_name }}.ovpn'
      mode: '0600'
    when: 
    - not client_stat_info.stat.exists
    - not ansible_check_mode
    delegate_to: localhost

  tags: ovpn-clients
